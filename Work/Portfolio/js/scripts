document.addEventListener("DOMContentLoaded", function () {


    const navBurger = document.getElementById("burger");
    const burgOpen = navBurger.querySelector(".nav-burger-open");
    const burgClosed = navBurger.querySelector(".nav-burger-closed");
    const backToTopButton = document.getElementById("toTop");

    const navMenu = document.getElementById("navmenu");
    let hideToTopComplete = true;
    //============FUNCTIONS===============================================================
    function fixClick(event) {

        if (event.type === "touchstart") {
            touchDetected = false; // Reset on touchstart
        }

        if (event.type === "touchmove") {
            isScrolling = true; // Scroll detected
        }

        if (event.type === "touchend" && !isScrolling) {
            touchDetected = true; // It's a valid tap
        }

        // If it's a click event and touch was already detected, skip the click event
        if (event.type === "click" && touchDetected) {
            touchDetected = false; // Reset the flag for the next interaction
            return true; // Prevent the click handler
        }

        return false;
    }


    function sizeChecker() {


        let element = document.querySelector('.yairo-landing-page');
        if (window.innerWidth > 769) {
            element.classList.remove('mobile-layout');
        } else {
            element.classList.add('mobile-layout');
        }

    }
    //======================================================================================






    window.addEventListener('load', sizeChecker);
    window.addEventListener('resize', sizeChecker);




    window.addEventListener("scroll", function () {

        if (window.scrollY > 500 && (hideToTopComplete)) { // Show after scrolling down 300px
            hideToTopComplete = false;

            backToTopButton.classList.remove("hidden");
            setTimeout(() => {
                backToTopButton.classList.remove("invis");
                hideToTopComplete = true;
            }, 200);

        } else if (window.scrollY <= 300 && hideToTopComplete) {
            hideToTopComplete = false;
            backToTopButton.classList.add("invis")

            setTimeout(() => {
                backToTopButton.classList.add("hidden");
                hideToTopComplete = true;
            }, 200);


        }

        if (window.scrollY === 0) {
            hideToTopComplete = true;
            backToTopButton.classList.add("invis");

            backToTopButton.classList.add("hidden");
        }
    });






    function toggleNavMenuMobile() {



        if (navMenu.classList.contains('hidden')) {

            navMenu.classList.remove('hidden');


            setTimeout(() => { navMenu.classList.remove('nav-collapsed'); }, 10);


        }

        //Close nav menu
        else {

            navMenu.classList.add('nav-collapsed');


            navMenu.addEventListener('transitionend', function handleTransitionEnd() {
                // Add hidden class after the transition completes
                navMenu.classList.add('hidden');

                // Remove the event listener to prevent it from firing again in the future
                navMenu.removeEventListener('transitionend', handleTransitionEnd);
            });




        }




    }


    function toggleBurger(event) {

        if (fixClick(event)) return;

        //open nav menu
        if (burgOpen.classList.contains('hidden')) {
            burgOpen.classList.remove('hidden');
            burgClosed.classList.add('hidden');

        }

        //Close nav menu
        else if (burgClosed.classList.contains('hidden')) {
            burgClosed.classList.remove('hidden');
            burgOpen.classList.add('hidden');
        }

        toggleNavMenuMobile();

    }


    navBurger.addEventListener('touchend', toggleBurger);
    navBurger.addEventListener('click', toggleBurger);


    function scrollToTop(event) {

        if (fixClick(event)) return;
        backToTopButton.classList.add("buttonToTop-hover");
        setTimeout(() => {
            backToTopButton.classList.remove("buttonToTop-hover");
        }, 400);
        window, scrollTo({
            top: 0,
            behavior: "smooth"
        });

    }

    backToTopButton.addEventListener('touchend', scrollToTop);
    backToTopButton.addEventListener('click', scrollToTop);


    // Select all .q-answer elements
    const items = document.querySelectorAll(".q-answer");
    let touchDetected = false;
    let elementOpen = false;
    let elementClosed = true;

    // Add an event listener to each .q-answer for both touchstart and click
    items.forEach((item) => {
        // Handle click and touchstart events
        item.addEventListener('touchend', handleInteraction);
        item.addEventListener("click", handleInteraction);

        // Event handler function for interaction (click or tap)
        function handleInteraction(event) {

            if (fixClick(event)) return;


            // Access the .q-content element within the clicked item
            const section = item.querySelector(".q-section");
            const content = item.querySelector(".q-content");
            const plusSymbol = item.querySelector(".q-symbol-plus");
            const minusSymbol = item.querySelector(".q-symbol-minus");

            const sectionId = section.id;

            const sectionElement = document.getElementById(sectionId);

            if (content.classList.contains("q-content-closed")) {
                section.classList.add("q-section-open");
                // Immediately remove the 'hidden' class to make it visible
                content.classList.remove("hidden");
                if (plusSymbol) plusSymbol.classList.add("hidden");
                if (minusSymbol) minusSymbol.classList.remove("hidden");
                if (sectionElement) sectionElement.classList.add("q-content-borders");

                // Use a short delay to give the browser a chance to reflow
                setTimeout(() => {
                    // Now, remove 'q-content-closed' and add 'q-content-open' to trigger animation
                    content.classList.remove("q-content-closed");
                    content.classList.add("q-content-open");
                }, 10); // A small delay (e.g., 20ms) to trigger the transition
            } else if (content.classList.contains("q-content-open")) {

                section.classList.remove("q-section-open");
                if (plusSymbol) plusSymbol.classList.remove("hidden");
                if (minusSymbol) minusSymbol.classList.add("hidden");
                if (sectionElement)
                    sectionElement.classList.remove("q-content-borders");

                // When it's open, close it and add the 'q-content-closed' class
                content.classList.remove("q-content-open");
                content.classList.add("q-content-closed");

                // Listen for the transition end to hide the element completely
                content.addEventListener("transitionend", function transitionEnd() {
                    if (content.classList.contains("q-content-open")) {
                        return;
                    } else {

                        content.classList.add("hidden"); // Add hidden class to set display: none
                        content.removeEventListener("transitionend", transitionEnd); // Remove the listener after it's fired
                    }

                });
            }

            // Optional: Prevent default behavior for touchstart to avoid double-tap zoom

        }
    });
});
